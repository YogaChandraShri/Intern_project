# -*- coding: utf-8 -*-
"""intern_proj

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q1-0h8UpkPGG2y_XxhgaAOEwjTqF6zS3
"""



import streamlit as st
import pandas as pd
import numpy as np
from sklearn.datasets import load_iris
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load the iris dataset
iris = load_iris()
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['target'] = iris.target
df['species'] = df['target'].map({0: 'setosa', 1: 'versicolor', 2: 'virginica'})

# Features and target
X = df.drop(['target', 'species'], axis=1)
y = df['target']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train model
clf = DecisionTreeClassifier()
clf.fit(X_train, y_train)

# Streamlit app
st.set_page_config(page_title="Iris Species Classifier", layout="centered")

st.title("ðŸŒ¸ Iris Species Prediction App")
st.write("Enter the flower measurements below to predict its species using a Decision Tree model.")

# Sliders for input
sepal_length = st.slider("Sepal Length (cm)", 4.0, 8.0, 5.1)
sepal_width = st.slider("Sepal Width (cm)", 2.0, 4.5, 3.5)
petal_length = st.slider("Petal Length (cm)", 1.0, 7.0, 1.4)
petal_width = st.slider("Petal Width (cm)", 0.1, 2.5, 0.2)

# Prediction
user_input = np.array([[sepal_length, sepal_width, petal_length, petal_width]])
prediction = clf.predict(user_input)[0]
predicted_species = iris.target_names[prediction]

# Display result
st.success(f"ðŸŒ¼ The predicted species is: **{predicted_species.capitalize()}**")

# Show accuracy
accuracy = accuracy_score(y_test, clf.predict(X_test))
st.write(f"âœ… **Model Accuracy:** {accuracy:.2f}")
